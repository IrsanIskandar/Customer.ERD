// <auto-generated />
using System;
using Customer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Customer.Data.Migrations
{
    [DbContext(typeof(CustomerContext))]
    partial class CustomerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Customer.Domain.Models.MSAccountManager", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("fullname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("id_directorate")
                        .HasColumnType("integer");

                    b.Property<int>("id_division")
                        .HasColumnType("integer");

                    b.Property<int>("id_team_leader")
                        .HasColumnType("integer");

                    b.Property<string>("last_updated_by")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("updated_datetime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("id_directorate");

                    b.HasIndex("id_division");

                    b.HasIndex("id_team_leader");

                    b.ToTable("ms_account_manager");
                });

            modelBuilder.Entity("Customer.Domain.Models.MSOrgDirectorate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("code_findim")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id");

                    b.ToTable("ms_org_directorate");
                });

            modelBuilder.Entity("Customer.Domain.Models.MSOrgDivision", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("code_findim")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("id_directorate")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id");

                    b.HasIndex("id_directorate");

                    b.ToTable("ms_org_division");
                });

            modelBuilder.Entity("Customer.Domain.Models.MSAccountManager", b =>
                {
                    b.HasOne("Customer.Domain.Models.MSOrgDirectorate", "MSOrgDirectorate")
                        .WithMany()
                        .HasForeignKey("id_directorate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Customer.Domain.Models.MSOrgDivision", "MSOrgDivision")
                        .WithMany()
                        .HasForeignKey("id_division")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Customer.Domain.Models.MSAccountManager", "MSAccountManagers")
                        .WithMany()
                        .HasForeignKey("id_team_leader")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MSAccountManagers");

                    b.Navigation("MSOrgDirectorate");

                    b.Navigation("MSOrgDivision");
                });

            modelBuilder.Entity("Customer.Domain.Models.MSOrgDivision", b =>
                {
                    b.HasOne("Customer.Domain.Models.MSOrgDirectorate", "MSOrgDirectorate")
                        .WithMany()
                        .HasForeignKey("id_directorate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MSOrgDirectorate");
                });
#pragma warning restore 612, 618
        }
    }
}
